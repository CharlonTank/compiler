on:
  push:
    branches:
      - lamdera-next

name: Build Lamdera Compiler for Linux
defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        # - windows-latest
        # - macOS-latest

    name: release-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Configure environment
      run: |
        git config --global core.autocrlf false
    # - name: Configure GPG Key
    #   run: |
    #     echo "$GPG_SIGNING_KEY" | base64 --decode > private.key
    #     gpg --import private.key
    #     rm private.key
    #   env:
    #     GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    - uses: actions/checkout@v2
    - name: Workaround for https://github.com/actions/checkout/issues/290
      run: git fetch --tags --prune --unshallow --force
    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      id: setup-haskell
      with:
        ghc-version: 9.0.2
    - name: Verify Haskell version
      run: |
        cabal --version
        ghc --version
        [[ $(ghc --numeric-version) == 9.0.2 ]]
    - uses: actions/cache@v2
      name: Cache cabal-release-v1-${{ runner.os }}-${{ hashFiles('Dockerfile') }}
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          /tmp/docker-registry
        key: cabal-release-v1-${{ runner.os }}-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          cabal-release-v1-${{ runner.os }}-

    - run: cabal v2-update

    # https://github.com/dtinth/github-actions-docker-layer-caching-poc/blob/master/.github/workflows/dockerimage.yml
    # https://dev.to/dtinth/caching-docker-builds-in-github-actions-which-approach-is-the-fastest-a-research-18ei
    - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
    - run: docker pull localhost:5000/lamdera-next-linux || true

    # - run: docker build . -t lamdera-next-linux --cache-from=localhost:5000/lamdera-next-linux
    - run: ./build.sh --verbose --verbose -- publish-1.0.2

    - run: docker tag lamdera-next-linux localhost:5000/lamdera-next-linux && docker push localhost:5000/lamdera-next-linux || true
      # if: steps.cache.outputs.cache-hit != 'true'

    # - run: ./build.sh -- dist-dependencies
    # - run: ./build.sh -- dist
    # - name: Sign artifacts
    #   run: |
    #     for i in dist/*; do
    #       gpg --verbose --local-user 1508E30E65C8C21F --output "$i".sig --detach-sig "$i"
    #     done
    - uses: actions/upload-artifact@v3
      with:
        name: lamdera
        path: publish/
