module Migrate_External_Paramed.Actual exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V1.External
import Evergreen.V2.External
import Lamdera.Migrations exposing (..)
import Migrate_External_Paramed.New
import Migrate_External_Paramed.Old
import Quantity


target =
    migrate_Migrate_External_Paramed_New_Target


migrate_External_Paramed : (a_old -> a_new) -> Evergreen.V1.External.Paramed a_old -> Evergreen.V2.External.Paramed a_new
migrate_External_Paramed migrate_a old =
    { subtype = old.subtype |> migrate_a
    , string = old.string
    }


migrate_Migrate_External_Paramed_New_AnalyticsModel : Migrate_External_Paramed.Old.AnalyticsModel -> Migrate_External_Paramed.New.AnalyticsModel
migrate_Migrate_External_Paramed_New_AnalyticsModel old =
    { hoveringBars = old.hoveringBars
    , hoveringDots = old.hoveringDots
    , previousCursorPositions =
        old.previousCursorPositions
            |> migrate_Migrate_External_Paramed_New_IdDict identity
                (\rec ->
                    { position = rec.position |> migrate_Migrate_External_Paramed_New_Point2d identity identity
                    }
                )
    }


migrate_Migrate_External_Paramed_New_Coord : (units_old -> units_new) -> Migrate_External_Paramed.Old.Coord units_old -> Migrate_External_Paramed.New.Coord units_new
migrate_Migrate_External_Paramed_New_Coord migrate_units old =
    old |> Tuple.mapBoth migrate_Quantity_Quantity migrate_Quantity_Quantity


migrate_Migrate_External_Paramed_New_CustomType : Migrate_External_Paramed.Old.CustomType -> Migrate_External_Paramed.New.CustomType
migrate_Migrate_External_Paramed_New_CustomType old =
    case old of
        Migrate_External_Paramed.Old.CustomOne ->
            Migrate_External_Paramed.New.CustomOne

        Migrate_External_Paramed.Old.CustomTwo ->
            Migrate_External_Paramed.New.CustomTwo


migrate_Migrate_External_Paramed_New_Debounce : (a_old -> a_new) -> Migrate_External_Paramed.Old.Debounce a_old -> Migrate_External_Paramed.New.Debounce a_new
migrate_Migrate_External_Paramed_New_Debounce migrate_a old =
    case old of
        Migrate_External_Paramed.Old.Debounce p0 ->
            Migrate_External_Paramed.New.Debounce
                { input = p0.input |> List.map migrate_a
                , locked = p0.locked
                }


migrate_Migrate_External_Paramed_New_IdDict : (k_old -> k_new) -> (v_old -> v_new) -> Migrate_External_Paramed.Old.IdDict k_old v_old -> Migrate_External_Paramed.New.IdDict k_new v_new
migrate_Migrate_External_Paramed_New_IdDict migrate_k migrate_v old =
    case old of
        Migrate_External_Paramed.Old.RBNode_elm_builtin p0 p1 p2 p3 p4 ->
            Migrate_External_Paramed.New.RBNode_elm_builtin (p0 |> migrate_Migrate_External_Paramed_New_NColor)
                p1
                (p2 |> migrate_v)
                (p3 |> migrate_Migrate_External_Paramed_New_IdDict migrate_k migrate_v)
                (p4 |> migrate_Migrate_External_Paramed_New_IdDict migrate_k migrate_v)

        Migrate_External_Paramed.Old.RBEmpty_elm_builtin ->
            Migrate_External_Paramed.New.RBEmpty_elm_builtin


migrate_Migrate_External_Paramed_New_NColor : Migrate_External_Paramed.Old.NColor -> Migrate_External_Paramed.New.NColor
migrate_Migrate_External_Paramed_New_NColor old =
    case old of
        Migrate_External_Paramed.Old.Red ->
            Migrate_External_Paramed.New.Red

        Migrate_External_Paramed.Old.Black ->
            Migrate_External_Paramed.New.Black


migrate_Migrate_External_Paramed_New_Point2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Migrate_External_Paramed.Old.Point2d units_old coordinates_old -> Migrate_External_Paramed.New.Point2d units_new coordinates_new
migrate_Migrate_External_Paramed_New_Point2d migrate_units migrate_coordinates old =
    old |> migrate_Migrate_External_Paramed_New_Point2d_ migrate_units migrate_coordinates


migrate_Migrate_External_Paramed_New_Point2d_ : Migrate_External_Paramed.Old.Point2d_ units_old coordinates_old -> Migrate_External_Paramed.New.Point2d_ units_new coordinates_new
migrate_Migrate_External_Paramed_New_Point2d_ old =
    case old of
        Migrate_External_Paramed.Old.Point2d_ p0 ->
            Migrate_External_Paramed.New.Point2d_ p0


migrate_Migrate_External_Paramed_New_Target : Migrate_External_Paramed.Old.Target -> Migrate_External_Paramed.New.Target
migrate_Migrate_External_Paramed_New_Target old =
    case old of
        Migrate_External_Paramed.Old.UserTvarAlias p0 ->
            Migrate_External_Paramed.New.UserTvarAlias (p0 |> migrate_External_Paramed migrate_Migrate_External_Paramed_New_CustomType)

        Migrate_External_Paramed.Old.UserMixPackage p0 ->
            Migrate_External_Paramed.New.UserMixPackage (p0 |> migrate_Migrate_External_Paramed_New_AnalyticsModel)

        Migrate_External_Paramed.Old.UserMixPackage2 p0 ->
            Migrate_External_Paramed.New.UserMixPackage2 (p0 |> migrate_Migrate_External_Paramed_New_Coord migrate_Migrate_External_Paramed_New_CustomType)

        Migrate_External_Paramed.Old.UserMixPackage3 p0 ->
            Migrate_External_Paramed.New.UserMixPackage3 (p0 |> migrate_Migrate_External_Paramed_New_Debounce identity)


migrate_Quantity_Quantity : Quantity.Quantity number units -> Quantity.Quantity number units2
migrate_Quantity_Quantity old =
    Quantity.unwrap old |> Quantity.unsafe
